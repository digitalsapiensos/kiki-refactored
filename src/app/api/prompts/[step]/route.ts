/**
 * API Route para servir system prompts din√°micamente desde archivos markdown
 * GET /api/prompts/[step] - Retorna el system prompt para un step espec√≠fico
 */

import { NextRequest, NextResponse } from 'next/server'
import * as fs from 'fs'
import * as path from 'path'

// Path base a los system prompts
const PROMPTS_BASE_PATH = '/Users/higinieduardmoredomingo/Meta Agent - Kick Off Starter/System Prompts/situaciones-usuario/01-inicio-proyecto'

// Configuraci√≥n de cada step con explicaciones pedag√≥gicas
const STEP_CONFIG = {
  '1': {
    fileName: '1-extractor-conversacional.md',
    title: 'Conversaci√≥n de Negocio',
    role: 'Consultor virtual',
    description: 'Extraemos y clarificamos tu idea mediante preguntas guiadas estructuradas',
    aiRecommendation: 'LLM de tu preferencia',
    expectedOutput: 'conversation_summary.md',
    pedagogicalExplanation: `**¬øPor qu√© este paso es crucial?**

Este prompt implementa una **metodolog√≠a de consultor√≠a profesional** que convierte ideas vagas en documentos estructurados. Est√° dise√±ado con:

üéØ **CONVERSACI√ìN GUIADA EN 6 PASOS**:
- **STEP 1-2**: Captura y clarificaci√≥n - Evita assumptions y malentendidos
- **STEP 3**: Exploraci√≥n de contexto - Identifica stakeholders y restricciones reales  
- **STEP 4**: Profundizaci√≥n en features - Define el alcance real del MVP
- **STEP 5**: Aspectos t√©cnicos - Balancea ambici√≥n con realidad t√©cnica
- **STEP 6**: Validaci√≥n y resumen - Asegura que no se pierde informaci√≥n cr√≠tica

üìã **METODOLOG√çA PROBADA**: Basada en **Design Thinking** y **Business Analysis**:
- Una pregunta por vez (evita overwhelm)
- Construye sobre respuestas anteriores (contexto acumulativo)
- Valida comprensi√≥n antes de avanzar (reduce retrabajo)

üéì **APRENDES**: C√≥mo hacer discovery de requisitos, c√≥mo estructurar una idea de negocio, c√≥mo comunicar una visi√≥n de producto.`,
    instructions: [
      'Copia el system prompt completo',
      'Ve a tu LLM favorito', 
      'Pega el prompt en una nueva conversaci√≥n',
      'Comparte tu idea de aplicaci√≥n cuando te lo pida',
      'Sigue la conversaci√≥n hasta generar conversation_summary.md',
      'Vuelve aqu√≠ y pega la URL de tu conversaci√≥n'
    ]
  },
  '2': {
    fileName: '2-formalizador-negocio.md',
    title: 'Formalizaci√≥n de Negocio',
    role: 'Business Analyst',
    description: 'Transformamos la conversaci√≥n en documentos estructurados de negocio',
    aiRecommendation: 'LLM de tu preferencia',
    expectedOutput: '3 documentos de negocio formales',
    pedagogicalExplanation: `**¬øPor qu√© separar negocio de tecnolog√≠a?**

Este prompt implementa el principio de **separaci√≥n de concerns** - primero entender QU√â construir, despu√©s C√ìMO construirlo.

üèóÔ∏è **BUSINESS-LOGIC DECOMPOSER**: Metodolog√≠a de **an√°lisis de sistemas** profesional:
- **01_case_overview.md**: Visi√≥n ejecutiva (para stakeholders y funding)
- **02_logic_breakdown.md**: An√°lisis detallado (entidades, relaciones, CRUD)  
- **03_meta_outline.md**: Esquema conceptual de datos (pre-database design)

üìä **PIPELINE DE 7 PASOS** basado en **Domain-Driven Design**:
- **STEP 1-2**: Domain discovery (¬øqu√© "cosas" existen en tu negocio?)
- **STEP 3-4**: Entity modeling (¬øqu√© propiedades tienen? ¬øc√≥mo se relacionan?)
- **STEP 5**: CRUD analysis (¬øqui√©n puede hacer qu√© con cada entidad?)
- **STEP 6-7**: Meta modeling (preparaci√≥n para dise√±o de base de datos)

üéì **APRENDES**: Domain modeling, entity relationship design, business rule analysis, security at the business level.`,
    instructions: [
      'Copia el system prompt del Paso 2',
      'Usa tu LLM favorito para an√°lisis profundo',
      'Pega el conversation_summary.md del paso anterior', 
      'Sigue las instrucciones para generar los 3 documentos',
      'Guarda los archivos generados',
      'Vuelve aqu√≠ y pega la URL de tu conversaci√≥n'
    ]
  },
  '3': {
    fileName: '3-generador-masterplan.md',
    title: 'Master Plan T√©cnico',
    role: 'Arquitecto Senior',
    description: 'Creamos hoja de ruta completa con stack tecnol√≥gico y arquitectura',
    aiRecommendation: 'LLM de tu preferencia',
    expectedOutput: 'masterplan.md completo',
    pedagogicalExplanation: `**¬øC√≥mo se traduce negocio a tecnolog√≠a?**

Este prompt implementa **arquitectura de software profesional** - el puente entre negocio y c√≥digo.

üõ†Ô∏è **AN√ÅLISIS Y S√çNTESIS EN 6 PASOS**:
- **STEP 1**: Document analysis - Lee los 3 docs de negocio con ojo t√©cnico
- **STEP 2**: **Stack recommendation** - Elige tecnolog√≠as 2025 (Supabase, React 19, TypeScript 5.0)
- **STEP 3**: **Phase planning** - Divide desarrollo en MVP + expansiones
- **STEP 4**: **Risk identification** - Anticipa problemas t√©cnicos/negocio/desarrollo
- **STEP 5**: **Design principles** - UX/UI guidelines y arquitectura
- **STEP 6**: **Future roadmap** - Escalabilidad y expansi√≥n

üé® **EQUILIBRIO CLAVE**: Ambici√≥n vs Realismo
- Recomienda tecnolog√≠as modernas pero probadas
- Divide en fases para entregar valor r√°pido
- Identifica riesgos ANTES de que sean problemas

üéì **APRENDES**: Arquitectura de software, selecci√≥n de tecnolog√≠as, planificaci√≥n de fases, gesti√≥n de riesgos t√©cnicos.`,
    instructions: [
      'Copia el system prompt del Paso 3',
      'Usa tu LLM favorito para an√°lisis t√©cnico',
      'Proporciona los 3 documentos del paso anterior',
      'Genera el masterplan.md t√©cnico completo',
      'Guarda el archivo masterplan.md', 
      'Vuelve aqu√≠ y pega la URL de tu conversaci√≥n'
    ]
  },
  '4': {
    fileName: '4-arquitecto-estructura.md',
    title: 'Estructura del Proyecto',
    role: 'Arquitecto de Estructura',
    description: 'Generamos andamiaje completo con carpetas y archivos stub organizados',
    aiRecommendation: 'Claude Code (IDE)',
    expectedOutput: 'Proyecto estructurado',
    pedagogicalExplanation: `**¬øPor qu√© MONOREPO y no proyecto simple?**

Este prompt ense√±a **arquitectura escalable** desde el d√≠a 1 usando **metodolog√≠a MONOREPO**.

üè¢ **ARQUITECTURA APPS/ + PACKAGES/**:
- **apps/main-app/**: Tu aplicaci√≥n principal
- **apps/admin-panel/**: Panel administrativo (futuro)
- **packages/ui/**: Componentes reutilizables (Button, Input, Modal)
- **packages/utils/**: Funciones compartidas (formatters, validators)
- **packages/config/**: Configuraciones (ESLint, TypeScript, Tailwind)

üîÑ **REUTILIZACI√ìN INTELIGENTE**: Un bot√≥n, usado en todas las apps
- **Consistencia**: Design system unificado
- **Escalabilidad**: F√°cil a√±adir landing pages, mobile app
- **DX Superior**: Un repo, una instalaci√≥n, builds optimizados

üéì **APRENDES**: Arquitectura de monorepo, organizaci√≥n de c√≥digo, design systems, tooling moderno (Turborepo/Nx).`,
    instructions: [
      'Copia el system prompt del Paso 4',
      'CAMBIO: Usa Claude Code en tu IDE favorito',
      'Proporciona el masterplan.md del paso anterior',
      'Genera la estructura completa del proyecto',
      'Crea carpetas, archivos stub y documentaci√≥n',
      'Vuelve aqu√≠ y pega la URL de tu conversaci√≥n'
    ]
  },
  '5': {
    fileName: '5-configurador-proyecto.md',
    title: 'Configuraci√≥n Operativa',
    role: 'Project Operations',
    description: 'Configuramos backlog, tracking y sistema operativo del proyecto',
    aiRecommendation: 'Claude Code (IDE)',
    expectedOutput: 'Proyecto listo para development',
    pedagogicalExplanation: `**¬øC√≥mo se gestiona un proyecto de software profesional?**

Este prompt final implementa **DevOps y Project Management** profesional - el "sistema operativo" de tu proyecto.

üìã **SISTEMA DE GESTI√ìN TRICAPA**:
- **../.claude/BACKLOG.md**: Estrategia (EPICs ‚Üí Stories) - QU√â construir
- **../.claude/STATUS_LOG.md**: T√°cticas (decisiones diarias) - C√ìMO va el progreso  
- **../.claude/PRD.md**: Visi√≥n (requirements) - POR QU√â construir esto

‚ö° **METODOLOG√çA POR SPRINTS**:
- **BACKLOG**: Solo EPICs y Stories (nivel estrat√©gico)
- **sprints/[timestamp]/**: Tasks detallados por sprint
- **Jerarqu√≠a**: EPIC ‚Üí STORY ‚Üí TASK ‚Üí Implementation

ü§ñ **CLAUDE INTEGRATION**: Configuraciones para que Claude Code:
- Consulte PRD antes de implementar
- Actualice STATUS_LOG en cada decisi√≥n  
- Siga methodology probada

üéì **APRENDES**: Agile project management, documentation as code, DevOps workflows, AI-assisted development.`,
    instructions: [
      'Copia el system prompt del Paso 5 (FINAL)',
      'Usa Claude Code en tu IDE',
      'Proporciona la estructura del paso anterior',
      'Genera BACKLOG.md, STATUS_LOG.md, configuraciones',
      'Configura el sistema operativo del proyecto',
      'Tu proyecto estar√° 100% listo para development'
    ]
  }
}

export async function GET(
  request: NextRequest,
  { params }: { params: { step: string } }
) {
  try {
    const step = params.step
    const config = STEP_CONFIG[step as keyof typeof STEP_CONFIG]
    
    if (!config) {
      return NextResponse.json(
        { error: `Step ${step} not found` },
        { status: 404 }
      )
    }

    // Leer el archivo markdown
    const filePath = path.join(PROMPTS_BASE_PATH, config.fileName)
    
    if (!fs.existsSync(filePath)) {
      return NextResponse.json(
        { error: `Prompt file not found: ${config.fileName}` },
        { status: 404 }
      )
    }

    const fileContent = fs.readFileSync(filePath, 'utf-8')
    
    // Extraer el contenido entre <system_prompt> tags
    const systemPromptMatch = fileContent.match(/<system_prompt>([\s\S]*?)<\/system_prompt>/)
    const systemPrompt = systemPromptMatch ? systemPromptMatch[1].trim() : fileContent

    return NextResponse.json({
      step: parseInt(step),
      title: config.title,
      role: config.role,
      description: config.description,
      aiRecommendation: config.aiRecommendation,
      expectedOutput: config.expectedOutput,
      instructions: config.instructions,
      pedagogicalExplanation: config.pedagogicalExplanation,
      systemPrompt: systemPrompt
    })

  } catch (error) {
    console.error(`Error loading prompt for step ${params.step}:`, error)
    return NextResponse.json(
      { error: 'Internal server error loading prompt' },
      { status: 500 }
    )
  }
}